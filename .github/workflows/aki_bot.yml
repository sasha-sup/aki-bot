name: Aki-Bot Builder

on:
  push:
    branches:
      - master

jobs:
  gitguardian_scan:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: GitGuardian scan
        uses: ./.github/actions/git_guardian.yml

  check_files:
    name: Check files
    runs-on: ubuntu-latest
    needs: [gitguardian_scan]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check files
        uses: ./.github/actions/check_files.yml

  build_aki_bot_core:
    name: Build Aki-Bot-Core
    runs-on: ubuntu-latest
    needs: [check_files]
    if: ${{ needs.check_files.outputs.run_job_bot == 'true' }}
    steps:
      - name: Use Docker Build & Push template
        uses: ./.github/actions/docker_build_push
        with:
          image_name: aki-bot-core
          image_tag: stable

  deploy_aki_bot_core:
    name: Deploy Aki-Bot-Core
    runs-on: ubuntu-latest
    needs: [build_aki_bot_core]
    steps:
      - name: SSH to Server and Execute Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          script: |
            /bin/bash /opt/aki-bot/core/aki-bot-core-deploy.sh

  build_aki_bot_images:
    name: Build Aki-Bot Images
    runs-on: ubuntu-latest
    needs: [check_files]
    if: ${{ needs.check_files.outputs.run_job_image == 'true' }}
    steps:
      - name: Use Docker Build & Push template
        uses: ./.github/actions/docker_build_push
        with:
          image_name: aki-bot-images
          image_tag: stable

  build_aki_bot_video:
    name: Build Aki-Bot Video
    runs-on: ubuntu-latest
    needs: [check_files]
    if: ${{ needs.check_files.outputs.run_job_video == 'true' }}
    steps:
      - name: Use Docker Build & Push template
        uses: ./.github/actions/docker_build_push
        with:
          image_name: aki-bot-video
          image_tag: stable
