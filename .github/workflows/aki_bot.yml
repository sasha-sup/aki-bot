name: Aki-Bot Builder

on:
  push:
    branches:
      - master

jobs:
  gitguardian_scan:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.26.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  check_files:
    name: Check files
    runs-on: ubuntu-latest
    needs: [gitguardian_scan]
    outputs:
      RUN_JOB_BOT: ${{ steps.check_files.outputs.run_job_bot }}
      RUN_JOB_IMAGE: ${{ steps.check_files.outputs.run_job_image }}
      RUN_JOB_VIDEO: ${{ steps.check_files.outputs.run_job_video }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD > files.txt

          while IFS= read -r file; do
            echo $file
            if [[ $file == bot/* ]]; then
              echo "This modified file is under the 'bot' folder."
              run_job_bot=true
            elif [[ $file == image/* ]]; then
              echo "This modified file is under the 'image' folder."
              run_job_image=true
            elif [[ $file == video/* ]]; then
              echo "This modified file is under the 'video' folder."
              run_job_video=true
            fi
          done < files.txt

          echo "RUN_JOB_BOT=run_job_bot" >> "$GITHUB_OUTPUT"
          echo "RUN_JOB_IMAGE=run_job_image" >> "$GITHUB_OUTPUT"
          echo "RUN_JOB_VIDEO=run_job_video" >> "$GITHUB_OUTPUT"

  build_aki_bot_core:
    name: Build Aki-Bot-Core
    runs-on: ubuntu-latest
    needs: [check_files]
    if: ${{ needs.check_files.outputs.RUN_JOB_BOT == 'true' }}
    steps:
      - name: Use Docker Build & Push template
        uses: ./.github/actions/docker_build_push
        with:
          image_name: aki-bot-core
          image_tag: stable

  deploy_aki_bot_core:
    name: Deploy Aki-Bot-Core
    runs-on: ubuntu-latest
    needs: [build_aki_bot_core]
    steps:
      - name: SSH to Server and Execute Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          script: |
            /bin/bash /opt/aki-bot/core/aki-bot-core-deploy.sh

  build_aki_bot_image:
    name: Build Aki-Bot Images
    runs-on: ubuntu-latest
    needs: [check_files]
    if: ${{ needs.check_files.outputs.RUN_JOB_IMAGE == 'true' }}
    steps:
      - name: Use Docker Build & Push template
        uses: ./.github/actions/docker_build_push
        with:
          image_name: aki-bot-images
          image_tag: stable

  deploy_aki_bot_image:
    name: Deploy Aki-Bot-Image
    runs-on: ubuntu-latest
    needs: [build_aki_bot_image]
    steps:
      - name: SSH to Server and Execute Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          script: |
            /bin/bash /opt/aki-bot/image/aki-bot-image-deploy.sh

  build_aki_bot_video:
    name: Build Aki-Bot Video
    runs-on: ubuntu-latest
    needs: [check_files]
    if: ${{ needs.check_files.outputs.RUN_JOB_VIDEO == 'true' }}
    steps:
      - name: Use Docker Build & Push template
        uses: ./.github/actions/docker_build_push
        with:
          image_name: aki-bot-video
          image_tag: stable

  deploy_aki_bot_video:
    name: Deploy Aki-Bot-Image
    runs-on: ubuntu-latest
    needs: [build_aki_bot_video]
    steps:
      - name: SSH to Server and Execute Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          script: |
            /bin/bash /opt/aki-bot/video/aki-bot-video-deploy.sh
